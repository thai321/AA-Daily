require 'dynamic_programming'
require 'rspec'
require 'rspec-benchmark'

describe 'Super Frog Hops' do
  include RSpec::Benchmark::Matchers
  let(:dp) { DynamicProgramming.new() }

  let(:ans1) { [[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 2], [1, 1, 1, 2, 1], [1, 1, 1, 3], [1, 1, 2, 1, 1], [1, 1, 2, 2], [1, 1, 3, 1], [1, 1, 4], [1, 2, 1, 1, 1], [1, 2, 1, 2], [1, 2, 2, 1], [1, 2, 3], [1, 3, 1, 1], [1, 3, 2], [1, 4, 1], [2, 1, 1, 1, 1], [2, 1, 1, 2], [2, 1, 2, 1], [2, 1, 3], [2, 2, 1, 1], [2, 2, 2], [2, 3, 1], [2, 4], [3, 1, 1, 1], [3, 1, 2], [3, 2, 1], [3, 3], [4, 1, 1], [4, 2]] }

  let(:ans2) { [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 1, 2, 1, 1], [1, 1, 1, 1, 1, 1, 2, 2], [1, 1, 1, 1, 1, 1, 3, 1], [1, 1, 1, 1, 1, 1, 4], [1, 1, 1, 1, 1, 2, 1, 1, 1], [1, 1, 1, 1, 1, 2, 1, 2], [1, 1, 1, 1, 1, 2, 2, 1], [1, 1, 1, 1, 1, 2, 3], [1, 1, 1, 1, 1, 3, 1, 1], [1, 1, 1, 1, 1, 3, 2], [1, 1, 1, 1, 1, 4, 1], [1, 1, 1, 1, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 1, 1, 2], [1, 1, 1, 1, 2, 1, 2, 1], [1, 1, 1, 1, 2, 1, 3], [1, 1, 1, 1, 2, 2, 1, 1], [1, 1, 1, 1, 2, 2, 2], [1, 1, 1, 1, 2, 3, 1], [1, 1, 1, 1, 2, 4], [1, 1, 1, 1, 3, 1, 1, 1], [1, 1, 1, 1, 3, 1, 2], [1, 1, 1, 1, 3, 2, 1], [1, 1, 1, 1, 3, 3], [1, 1, 1, 1, 4, 1, 1], [1, 1, 1, 1, 4, 2], [1, 1, 1, 2, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1, 1, 1, 2], [1, 1, 1, 2, 1, 1, 2, 1], [1, 1, 1, 2, 1, 1, 3], [1, 1, 1, 2, 1, 2, 1, 1], [1, 1, 1, 2, 1, 2, 2], [1, 1, 1, 2, 1, 3, 1], [1, 1, 1, 2, 1, 4], [1, 1, 1, 2, 2, 1, 1, 1], [1, 1, 1, 2, 2, 1, 2], [1, 1, 1, 2, 2, 2, 1], [1, 1, 1, 2, 2, 3], [1, 1, 1, 2, 3, 1, 1], [1, 1, 1, 2, 3, 2], [1, 1, 1, 2, 4, 1], [1, 1, 1, 3, 1, 1, 1, 1], [1, 1, 1, 3, 1, 1, 2], [1, 1, 1, 3, 1, 2, 1], [1, 1, 1, 3, 1, 3], [1, 1, 1, 3, 2, 1, 1], [1, 1, 1, 3, 2, 2], [1, 1, 1, 3, 3, 1], [1, 1, 1, 3, 4], [1, 1, 1, 4, 1, 1, 1], [1, 1, 1, 4, 1, 2], [1, 1, 1, 4, 2, 1], [1, 1, 1, 4, 3], [1, 1, 2, 1, 1, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1, 2], [1, 1, 2, 1, 1, 1, 2, 1], [1, 1, 2, 1, 1, 1, 3], [1, 1, 2, 1, 1, 2, 1, 1], [1, 1, 2, 1, 1, 2, 2], [1, 1, 2, 1, 1, 3, 1], [1, 1, 2, 1, 1, 4], [1, 1, 2, 1, 2, 1, 1, 1], [1, 1, 2, 1, 2, 1, 2], [1, 1, 2, 1, 2, 2, 1], [1, 1, 2, 1, 2, 3], [1, 1, 2, 1, 3, 1, 1], [1, 1, 2, 1, 3, 2], [1, 1, 2, 1, 4, 1], [1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 2, 2, 1, 1, 2], [1, 1, 2, 2, 1, 2, 1], [1, 1, 2, 2, 1, 3], [1, 1, 2, 2, 2, 1, 1], [1, 1, 2, 2, 2, 2], [1, 1, 2, 2, 3, 1], [1, 1, 2, 2, 4], [1, 1, 2, 3, 1, 1, 1], [1, 1, 2, 3, 1, 2], [1, 1, 2, 3, 2, 1], [1, 1, 2, 3, 3], [1, 1, 2, 4, 1, 1], [1, 1, 2, 4, 2], [1, 1, 3, 1, 1, 1, 1, 1], [1, 1, 3, 1, 1, 1, 2], [1, 1, 3, 1, 1, 2, 1], [1, 1, 3, 1, 1, 3], [1, 1, 3, 1, 2, 1, 1], [1, 1, 3, 1, 2, 2], [1, 1, 3, 1, 3, 1], [1, 1, 3, 1, 4], [1, 1, 3, 2, 1, 1, 1], [1, 1, 3, 2, 1, 2], [1, 1, 3, 2, 2, 1], [1, 1, 3, 2, 3], [1, 1, 3, 3, 1, 1], [1, 1, 3, 3, 2], [1, 1, 3, 4, 1], [1, 1, 4, 1, 1, 1, 1], [1, 1, 4, 1, 1, 2], [1, 1, 4, 1, 2, 1], [1, 1, 4, 1, 3], [1, 1, 4, 2, 1, 1], [1, 1, 4, 2, 2], [1, 1, 4, 3, 1], [1, 1, 4, 4], [1, 2, 1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 2], [1, 2, 1, 1, 1, 1, 2, 1], [1, 2, 1, 1, 1, 1, 3], [1, 2, 1, 1, 1, 2, 1, 1], [1, 2, 1, 1, 1, 2, 2], [1, 2, 1, 1, 1, 3, 1], [1, 2, 1, 1, 1, 4], [1, 2, 1, 1, 2, 1, 1, 1], [1, 2, 1, 1, 2, 1, 2], [1, 2, 1, 1, 2, 2, 1], [1, 2, 1, 1, 2, 3], [1, 2, 1, 1, 3, 1, 1], [1, 2, 1, 1, 3, 2], [1, 2, 1, 1, 4, 1], [1, 2, 1, 2, 1, 1, 1, 1], [1, 2, 1, 2, 1, 1, 2], [1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 3], [1, 2, 1, 2, 2, 1, 1], [1, 2, 1, 2, 2, 2], [1, 2, 1, 2, 3, 1], [1, 2, 1, 2, 4], [1, 2, 1, 3, 1, 1, 1], [1, 2, 1, 3, 1, 2], [1, 2, 1, 3, 2, 1], [1, 2, 1, 3, 3], [1, 2, 1, 4, 1, 1], [1, 2, 1, 4, 2], [1, 2, 2, 1, 1, 1, 1, 1], [1, 2, 2, 1, 1, 1, 2], [1, 2, 2, 1, 1, 2, 1], [1, 2, 2, 1, 1, 3], [1, 2, 2, 1, 2, 1, 1], [1, 2, 2, 1, 2, 2], [1, 2, 2, 1, 3, 1], [1, 2, 2, 1, 4], [1, 2, 2, 2, 1, 1, 1], [1, 2, 2, 2, 1, 2], [1, 2, 2, 2, 2, 1], [1, 2, 2, 2, 3], [1, 2, 2, 3, 1, 1], [1, 2, 2, 3, 2], [1, 2, 2, 4, 1], [1, 2, 3, 1, 1, 1, 1], [1, 2, 3, 1, 1, 2], [1, 2, 3, 1, 2, 1], [1, 2, 3, 1, 3], [1, 2, 3, 2, 1, 1], [1, 2, 3, 2, 2], [1, 2, 3, 3, 1], [1, 2, 3, 4], [1, 2, 4, 1, 1, 1], [1, 2, 4, 1, 2], [1, 2, 4, 2, 1], [1, 2, 4, 3], [1, 3, 1, 1, 1, 1, 1, 1], [1, 3, 1, 1, 1, 1, 2], [1, 3, 1, 1, 1, 2, 1], [1, 3, 1, 1, 1, 3], [1, 3, 1, 1, 2, 1, 1], [1, 3, 1, 1, 2, 2], [1, 3, 1, 1, 3, 1], [1, 3, 1, 1, 4], [1, 3, 1, 2, 1, 1, 1], [1, 3, 1, 2, 1, 2], [1, 3, 1, 2, 2, 1], [1, 3, 1, 2, 3], [1, 3, 1, 3, 1, 1], [1, 3, 1, 3, 2], [1, 3, 1, 4, 1], [1, 3, 2, 1, 1, 1, 1], [1, 3, 2, 1, 1, 2], [1, 3, 2, 1, 2, 1], [1, 3, 2, 1, 3], [1, 3, 2, 2, 1, 1], [1, 3, 2, 2, 2], [1, 3, 2, 3, 1], [1, 3, 2, 4], [1, 3, 3, 1, 1, 1], [1, 3, 3, 1, 2], [1, 3, 3, 2, 1], [1, 3, 3, 3], [1, 3, 4, 1, 1], [1, 3, 4, 2], [1, 4, 1, 1, 1, 1, 1], [1, 4, 1, 1, 1, 2], [1, 4, 1, 1, 2, 1], [1, 4, 1, 1, 3], [1, 4, 1, 2, 1, 1], [1, 4, 1, 2, 2], [1, 4, 1, 3, 1], [1, 4, 1, 4], [1, 4, 2, 1, 1, 1], [1, 4, 2, 1, 2], [1, 4, 2, 2, 1], [1, 4, 2, 3], [1, 4, 3, 1, 1], [1, 4, 3, 2], [1, 4, 4, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 2], [2, 1, 1, 1, 1, 1, 2, 1], [2, 1, 1, 1, 1, 1, 3], [2, 1, 1, 1, 1, 2, 1, 1], [2, 1, 1, 1, 1, 2, 2], [2, 1, 1, 1, 1, 3, 1], [2, 1, 1, 1, 1, 4], [2, 1, 1, 1, 2, 1, 1, 1], [2, 1, 1, 1, 2, 1, 2], [2, 1, 1, 1, 2, 2, 1], [2, 1, 1, 1, 2, 3], [2, 1, 1, 1, 3, 1, 1], [2, 1, 1, 1, 3, 2], [2, 1, 1, 1, 4, 1], [2, 1, 1, 2, 1, 1, 1, 1], [2, 1, 1, 2, 1, 1, 2], [2, 1, 1, 2, 1, 2, 1], [2, 1, 1, 2, 1, 3], [2, 1, 1, 2, 2, 1, 1], [2, 1, 1, 2, 2, 2], [2, 1, 1, 2, 3, 1], [2, 1, 1, 2, 4], [2, 1, 1, 3, 1, 1, 1], [2, 1, 1, 3, 1, 2], [2, 1, 1, 3, 2, 1], [2, 1, 1, 3, 3], [2, 1, 1, 4, 1, 1], [2, 1, 1, 4, 2], [2, 1, 2, 1, 1, 1, 1, 1], [2, 1, 2, 1, 1, 1, 2], [2, 1, 2, 1, 1, 2, 1], [2, 1, 2, 1, 1, 3], [2, 1, 2, 1, 2, 1, 1], [2, 1, 2, 1, 2, 2], [2, 1, 2, 1, 3, 1], [2, 1, 2, 1, 4], [2, 1, 2, 2, 1, 1, 1], [2, 1, 2, 2, 1, 2], [2, 1, 2, 2, 2, 1], [2, 1, 2, 2, 3], [2, 1, 2, 3, 1, 1], [2, 1, 2, 3, 2], [2, 1, 2, 4, 1], [2, 1, 3, 1, 1, 1, 1], [2, 1, 3, 1, 1, 2], [2, 1, 3, 1, 2, 1], [2, 1, 3, 1, 3], [2, 1, 3, 2, 1, 1], [2, 1, 3, 2, 2], [2, 1, 3, 3, 1], [2, 1, 3, 4], [2, 1, 4, 1, 1, 1], [2, 1, 4, 1, 2], [2, 1, 4, 2, 1], [2, 1, 4, 3], [2, 2, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 2], [2, 2, 1, 1, 1, 2, 1], [2, 2, 1, 1, 1, 3], [2, 2, 1, 1, 2, 1, 1], [2, 2, 1, 1, 2, 2], [2, 2, 1, 1, 3, 1], [2, 2, 1, 1, 4], [2, 2, 1, 2, 1, 1, 1], [2, 2, 1, 2, 1, 2], [2, 2, 1, 2, 2, 1], [2, 2, 1, 2, 3], [2, 2, 1, 3, 1, 1], [2, 2, 1, 3, 2], [2, 2, 1, 4, 1], [2, 2, 2, 1, 1, 1, 1], [2, 2, 2, 1, 1, 2], [2, 2, 2, 1, 2, 1], [2, 2, 2, 1, 3], [2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2], [2, 2, 2, 3, 1], [2, 2, 2, 4], [2, 2, 3, 1, 1, 1], [2, 2, 3, 1, 2], [2, 2, 3, 2, 1], [2, 2, 3, 3], [2, 2, 4, 1, 1], [2, 2, 4, 2], [2, 3, 1, 1, 1, 1, 1], [2, 3, 1, 1, 1, 2], [2, 3, 1, 1, 2, 1], [2, 3, 1, 1, 3], [2, 3, 1, 2, 1, 1], [2, 3, 1, 2, 2], [2, 3, 1, 3, 1], [2, 3, 1, 4], [2, 3, 2, 1, 1, 1], [2, 3, 2, 1, 2], [2, 3, 2, 2, 1], [2, 3, 2, 3], [2, 3, 3, 1, 1], [2, 3, 3, 2], [2, 3, 4, 1], [2, 4, 1, 1, 1, 1], [2, 4, 1, 1, 2], [2, 4, 1, 2, 1], [2, 4, 1, 3], [2, 4, 2, 1, 1], [2, 4, 2, 2], [2, 4, 3, 1], [2, 4, 4], [3, 1, 1, 1, 1, 1, 1, 1], [3, 1, 1, 1, 1, 1, 2], [3, 1, 1, 1, 1, 2, 1], [3, 1, 1, 1, 1, 3], [3, 1, 1, 1, 2, 1, 1], [3, 1, 1, 1, 2, 2], [3, 1, 1, 1, 3, 1], [3, 1, 1, 1, 4], [3, 1, 1, 2, 1, 1, 1], [3, 1, 1, 2, 1, 2], [3, 1, 1, 2, 2, 1], [3, 1, 1, 2, 3], [3, 1, 1, 3, 1, 1], [3, 1, 1, 3, 2], [3, 1, 1, 4, 1], [3, 1, 2, 1, 1, 1, 1], [3, 1, 2, 1, 1, 2], [3, 1, 2, 1, 2, 1], [3, 1, 2, 1, 3], [3, 1, 2, 2, 1, 1], [3, 1, 2, 2, 2], [3, 1, 2, 3, 1], [3, 1, 2, 4], [3, 1, 3, 1, 1, 1], [3, 1, 3, 1, 2], [3, 1, 3, 2, 1], [3, 1, 3, 3], [3, 1, 4, 1, 1], [3, 1, 4, 2], [3, 2, 1, 1, 1, 1, 1], [3, 2, 1, 1, 1, 2], [3, 2, 1, 1, 2, 1], [3, 2, 1, 1, 3], [3, 2, 1, 2, 1, 1], [3, 2, 1, 2, 2], [3, 2, 1, 3, 1], [3, 2, 1, 4], [3, 2, 2, 1, 1, 1], [3, 2, 2, 1, 2], [3, 2, 2, 2, 1], [3, 2, 2, 3], [3, 2, 3, 1, 1], [3, 2, 3, 2], [3, 2, 4, 1], [3, 3, 1, 1, 1, 1], [3, 3, 1, 1, 2], [3, 3, 1, 2, 1], [3, 3, 1, 3], [3, 3, 2, 1, 1], [3, 3, 2, 2], [3, 3, 3, 1], [3, 3, 4], [3, 4, 1, 1, 1], [3, 4, 1, 2], [3, 4, 2, 1], [3, 4, 3], [4, 1, 1, 1, 1, 1, 1], [4, 1, 1, 1, 1, 2], [4, 1, 1, 1, 2, 1], [4, 1, 1, 1, 3], [4, 1, 1, 2, 1, 1], [4, 1, 1, 2, 2], [4, 1, 1, 3, 1], [4, 1, 1, 4], [4, 1, 2, 1, 1, 1], [4, 1, 2, 1, 2], [4, 1, 2, 2, 1], [4, 1, 2, 3], [4, 1, 3, 1, 1], [4, 1, 3, 2], [4, 1, 4, 1], [4, 2, 1, 1, 1, 1], [4, 2, 1, 1, 2], [4, 2, 1, 2, 1], [4, 2, 1, 3], [4, 2, 2, 1, 1], [4, 2, 2, 2], [4, 2, 3, 1], [4, 2, 4], [4, 3, 1, 1, 1], [4, 3, 1, 2], [4, 3, 2, 1], [4, 3, 3], [4, 4, 1, 1], [4, 4, 2]] }

  it 'handles base cases' do
    expect(dp.super_frog_hops(1, 1)).to eq([[1]])
    expect(dp.super_frog_hops(2, 1)).to eq([[1, 1]])
    expect(dp.super_frog_hops(2, 2).sort).to eq([[1, 1], [2]])
  end

  it 'handles cases where k < n' do
    expect(dp.super_frog_hops(6, 4).sort).to eq(ans1)
    expect(dp.super_frog_hops(10, 4).sort).to eq(ans2)
  end

  it 'handles cases where n > k' do
    expect(dp.super_frog_hops(2, 5).sort).to eq([[1, 1], [2]])
    expect(dp.super_frog_hops(3, 10).sort).to eq([[1, 1, 1], [1, 2], [2, 1], [3]])
  end

  it 'runs in non-exponential time' do
    expect { dp.super_frog_hops(10, 10)}.to perform_under(100).ms
  end
end
