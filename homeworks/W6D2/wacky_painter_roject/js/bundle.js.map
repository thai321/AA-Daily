{"version":3,"sources":["webpack/bootstrap 8dd26fec6825c1c471dc","./js/main.js","./js/view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;ACPD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8dd26fec6825c1c471dc","/* globals $ */\n\nvar View = require(\"./view\");\n\n$(function () {\n  var $easel = $(\"#easel\");\n  new View($easel);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 1\n// module chunks = 0","/* jshint esversion: 6 */\n\nfunction View($el) {\n  this.$el = $el;\n  this.setupEasel();\n}\n\nwindow._randomColorString = function() {\n  return '#' + Math.random().toString(16).substr(-6);\n};\n\nView.prototype.exercise0 = function() {\n  //Challenge: (example) remove the 'square' class from every li\n  //Result: this should cause the grid to turn into a long list of undecorated lis\n  //just a list of dots\n\n  //this one completed as an example :) no additional code necessary\n  $('li').removeClass('square');\n};\n\nView.prototype.exercise1 = function() {\n  //Challenge: Give every square the class 'orange'\n  //Result: Every square should turn orange (we already have a CSS rule)\n\n  //your code here!\n  $('li').addClass('orange');\n};\n\nView.prototype.exercise2 = function() {\n  //Challenge: Remove every square\n  //Result: Every square vanishes\n  //your code here!\n  $('.square').remove();\n};\n\nView.prototype.exercise3 = function() {\n  //Challenge: Add an <h1> with the text 'i love jquery' under the grid.\n  //Result: An <h1> with the text 'i love jquery' appears under the grid.\n  //your code here!\n};\n\nView.prototype.exercise4 = function() {\n  //Challenge: Write your first name in every other square.\n  //Result: Your name appears in every other square.\n  //your code here!\n};\n\nView.prototype.exercise5 = function() {\n  //Challenge: Alert the row and column of the square, when the square is clicked.\n  //Result: When a square is clicked, the row and column appear in an alert. for\n  //example: clicking the top left square should alert '0, 0'.\n  //hint: checkout the addRow function at the bottom of the file: we set the\n  //  'data-pos' of every square\n  //your code here!\n};\n\nView.prototype.exercise6 = function() {\n  //Challenge: Give every square a random color!\n  //Result: Every square becomes a color as soon as this code runs. The grid\n  //should become a beautiful rainbow of colors.\n  //hint: use window._randomColorString() (defined at top) to get a random color!\n  //your code here!\n};\n\nView.prototype.exercise7 = function() {\n  //Challenge: When your mouse goes over a square, console log its color.\n  //Result: When the mouse goes over a square its color should appear in the\n  //console. The color won't be the color's name, but its rbg value.\n  //You should push the button for exercise 6 first to try it on the\n  //rainbow.\n  //your code here!\n};\n\nView.prototype.setupEasel = function() {\n  const $addRowButton = $('<button>').html('Add a row');\n  this.$el.append($addRowButton);\n  $addRowButton.on('click', this.addRow.bind(this));\n\n  for (let j = 0; j <= 7; j++) {\n    const $button = $('<button>').html('Exercise ' + j);\n    $button.on('click', this['exercise' + j]);\n    this.$el.append($button);\n  }\n\n  for (let i = 0; i < 20; i++) {\n    this.addRow();\n  }\n};\n\nView.prototype.addRow = function() {\n  const rowIdx = this.$el.find('.row').length;\n  const $row = $('<ul>').addClass('row').addClass('group');\n  for (let colIdx = 0; colIdx < 20; colIdx++) {\n    const $square = $('<li>')\n      .addClass('square')\n      .attr('data-pos', [rowIdx, colIdx]);\n    $square.on('mouseenter', e => {\n      const $square = $(e.currentTarget);\n      $square.css('background-color', window._randomColorString());\n    });\n    $row.append($square);\n  }\n  this.$el.append($row);\n};\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/view.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}